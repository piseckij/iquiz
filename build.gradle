plugins {
    id 'org.springframework.boot' version '2.6.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'

    id 'pmd'
    id 'checkstyle'
}

pmd {
    consoleOutput = true
    toolVersion = '6.40.0'
    rulesMinimumPriority = 5
    ruleSets = []
    ruleSetFiles = files('/configuration/checkstyle/ruleset.xml')
    sourceSets = [sourceSets.main]
}

checkstyle {
    configFile = file('/configuration/checkstyle/checkstyle.xml')
    ignoreFailures = false
    maxWarnings = 0
    checkstyleTest.enabled = false
}

group = 'by.pisetskiy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}
